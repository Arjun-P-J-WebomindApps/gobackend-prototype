// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"time"

	"github.com/Arjun-P-J-WebomindApps/gobackend-prototype/internal/db/models"
	"github.com/google/uuid"
)

type AuthPayload struct {
	AccessToken  *string      `json:"accessToken,omitempty"`
	RefreshToken *string      `json:"refreshToken,omitempty"`
	User         *models.User `json:"user,omitempty"`
	SessionID    *string      `json:"sessionId,omitempty"`
	UserID       *string      `json:"userId,omitempty"`
}

type CreateBrandInput struct {
	Name string `json:"name"`
}

type CreateCategoryInput struct {
	Name  string `json:"name"`
	Image string `json:"image"`
}

type CreateCompanyInput struct {
	Name   string `json:"name"`
	Status bool   `json:"status"`
}

type CreateModelInput struct {
	CompanyName string `json:"company_name"`
	Name        string `json:"name"`
}

type CreateModelVariantInput struct {
	ModelName  string `json:"model_name"`
	ModelType  string `json:"model_type"`
	ModelImage string `json:"model_image"`
}

type CreateProductPartInput struct {
	CompanyName  string `json:"company_name"`
	ModelName    string `json:"model_name"`
	BrandName    string `json:"brand_name"`
	CategoryName string `json:"category_name"`
	PartNo       string `json:"part_no"`
	IsActive     bool   `json:"is_active"`
}

type CreateRefreshTokenInput struct {
	ID         uuid.UUID  `json:"id"`
	UserID     uuid.UUID  `json:"userId"`
	SessionID  *uuid.UUID `json:"sessionId,omitempty"`
	TokenHash  string     `json:"tokenHash"`
	IPAddress  string     `json:"ipAddress"`
	UserAgent  string     `json:"userAgent"`
	ExpiresAt  time.Time  `json:"expiresAt"`
	RevokedAt  *time.Time `json:"revokedAt,omitempty"`
	ReplacedBy *uuid.UUID `json:"replacedBy,omitempty"`
}

type CreateUserInput struct {
	Name     string `json:"name"`
	Username string `json:"username"`
	Email    string `json:"email"`
	Password string `json:"password"`
	Mobile   string `json:"mobile"`
	Role     int32  `json:"role"`
	IsActive bool   `json:"isActive"`
}

type CreateUserOTPInput struct {
	UserID    uuid.UUID `json:"userId"`
	OtpCode   string    `json:"otpCode"`
	ExpiresAt time.Time `json:"expiresAt"`
}

type CreateUserSessionInput struct {
	UserID    uuid.UUID `json:"userId"`
	IPAddress string    `json:"ipAddress"`
	UserAgent string    `json:"userAgent"`
	ExpiresAt time.Time `json:"expiresAt"`
}

type LoginInput struct {
	Email    string `json:"email"`
	Password string `json:"password"`
}

type Mutation struct {
}

type Query struct {
}

type RefreshTokenInput struct {
	SessionID string `json:"sessionId"`
}

type SessionStatus struct {
	Valid bool         `json:"valid"`
	User  *models.User `json:"user,omitempty"`
}

type VerifyOTPInput struct {
	UserID  uuid.UUID `json:"userId"`
	OtpCode string    `json:"otpCode"`
}
